{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Geolocation from 'react-native-geolocation-service';\nimport Router from \"./src/navigation/Root\";\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport { Amplify } from 'aws-amplify';\nimport awsconfig from \"./src/aws-exports\";\nimport HomeMap from \"./src/components/HomeMap/HomeMap\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nAmplify.configure(awsconfig);\n\nfunction App() {\n  var androidPermissions = function _callee() {\n    var granted;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\n              title: \"UBER App LOCATION Permission\",\n              message: \"UBER App needs access to your LOCATION \" + \"so you can take awesome rides.\",\n              buttonNeutral: \"Ask Me Later\",\n              buttonNegative: \"Cancel\",\n              buttonPositive: \"OK\"\n            }));\n\n          case 3:\n            granted = _context.sent;\n\n            if (granted === PermissionsAndroid.RESULTS.GRANTED) {\n              console.log(\"You can use the LOCATION\");\n            } else {\n              console.log(\"LOCATION permission denied\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.warn(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    if (Platform.OS === 'android') {\n      androidPermissions();\n    } else {\n      Geolocation.requestAuthorization();\n    }\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\"\n    }), _jsx(HomeMap, {}), \"// \", _jsx(Router, {})]\n  });\n}\n\n;\nexport default withAuthenticator(App);","map":{"version":3,"names":["StatusBar","React","useEffect","Geolocation","Router","withAuthenticator","Amplify","awsconfig","HomeMap","configure","App","androidPermissions","PermissionsAndroid","request","PERMISSIONS","ACCESS_FINE_LOCATION","title","message","buttonNeutral","buttonNegative","buttonPositive","granted","RESULTS","GRANTED","console","log","warn","Platform","OS","requestAuthorization"],"sources":["/home/alexandre/Desktop/UberClone/Clone-App-Uber-/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport { PermissionsAndroid, Platform } from 'react-native';\n\n\nimport Geolocation from 'react-native-geolocation-service';\n\nimport Router from './src/navigation/Root';\n\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport { Amplify } from 'aws-amplify'\nimport awsconfig from './src/aws-exports'\nimport HomeMap from './src/components/HomeMap/HomeMap';\nAmplify.configure(awsconfig)\n\nfunction App() {\n    const androidPermissions = async () => {\n        try {\n            const granted = await PermissionsAndroid.request(\n                PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n                {\n                    title: \"UBER App LOCATION Permission\",\n                    message:\n                        \"UBER App needs access to your LOCATION \" +\n                        \"so you can take awesome rides.\",\n                    buttonNeutral: \"Ask Me Later\",\n                    buttonNegative: \"Cancel\",\n                    buttonPositive: \"OK\"\n                }\n            );\n            if (granted === PermissionsAndroid.RESULTS.GRANTED) {\n                console.log(\"You can use the LOCATION\");\n            } else {\n                console.log(\"LOCATION permission denied\");\n            }\n        } catch (err) {\n            console.warn(err);\n        }\n    }\n\n    useEffect(() => {\n        if (Platform.OS === 'android') {\n            androidPermissions();\n        } else {\n            // ios\n            Geolocation.requestAuthorization();\n        }\n    }, [])\n\n    return (\n        <>\n            <StatusBar barStyle=\"dark-content\" />\n            <HomeMap/>\n            // <Router />\n        </>\n    );\n};\n\nexport default withAuthenticator(App);\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAIA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,OAAOC,MAAP;AAEA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;;;;AACAF,OAAO,CAACG,SAAR,CAAkBF,SAAlB;;AAEA,SAASG,GAAT,GAAe;EACX,IAAMC,kBAAkB,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEGC,kBAAkB,CAACC,OAAnB,CAClBD,kBAAkB,CAACE,WAAnB,CAA+BC,oBADb,EAElB;cACIC,KAAK,EAAE,8BADX;cAEIC,OAAO,EACH,4CACA,gCAJR;cAKIC,aAAa,EAAE,cALnB;cAMIC,cAAc,EAAE,QANpB;cAOIC,cAAc,EAAE;YAPpB,CAFkB,CAFH;;UAAA;YAEbC,OAFa;;YAcnB,IAAIA,OAAO,KAAKT,kBAAkB,CAACU,OAAnB,CAA2BC,OAA3C,EAAoD;cAChDC,OAAO,CAACC,GAAR,CAAY,0BAAZ;YACH,CAFD,MAEO;cACHD,OAAO,CAACC,GAAR,CAAY,4BAAZ;YACH;;YAlBkB;YAAA;;UAAA;YAAA;YAAA;YAoBnBD,OAAO,CAACE,IAAR;;UApBmB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA3B;;EAwBAxB,SAAS,CAAC,YAAM;IACZ,IAAIyB,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;MAC3BjB,kBAAkB;IACrB,CAFD,MAEO;MAEHR,WAAW,CAAC0B,oBAAZ;IACH;EACJ,CAPQ,EAON,EAPM,CAAT;EASA,OACI;IAAA,WACI,KAAC,SAAD;MAAW,QAAQ,EAAC;IAApB,EADJ,EAEI,KAAC,OAAD,KAFJ,SAGO,KAAC,MAAD,KAHP;EAAA,EADJ;AAOH;;AAAA;AAED,eAAexB,iBAAiB,CAACK,GAAD,CAAhC"},"metadata":{},"sourceType":"module"}