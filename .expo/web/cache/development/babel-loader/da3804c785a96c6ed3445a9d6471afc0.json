{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { graphqlOperation } from \"aws-amplify\";\nimport React, { useEffect, useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport MapView, { Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\nimport { listCars } from \"../../graphql/queries\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar HomeMap = function HomeMap(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cars = _useState2[0],\n      setCars = _useState2[1];\n\n  var getImage = function getImage(type) {\n    if (type === \"UberX\") {\n      return require(\"../../assets/images/top-UberX.png\");\n    }\n\n    if (type === \"Comfort\") {\n      return require(\"../../assets/images/top-Comfort.png\");\n    }\n\n    return require(\"../../assets/images/top-UberXL.png\");\n  };\n\n  return _jsx(MapView, {\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    provider: PROVIDER_GOOGLE,\n    showsUserLocation: true,\n    showsMyLocationButton: true,\n    initialRegion: {\n      latitudeDelta: 0.0222,\n      longitudeDelta: 0.0121,\n      latitude: 28.450627,\n      longitude: -16.263045\n    },\n    children: cars.map(function (car) {\n      return _jsx(Marker, {\n        coordinate: {\n          latitude: car.latitude,\n          longitude: car.longitude\n        },\n        children: _jsx(Image, {\n          style: {\n            width: 60,\n            height: 60,\n            resizeMode: \"contain\",\n            transform: [{\n              rotate: car.heading + \"deg\"\n            }]\n          },\n          source: getImage(car.type)\n        })\n      }, car.id);\n    })\n  });\n};\n\nexport default HomeMap;","map":{"version":3,"names":["graphqlOperation","React","useEffect","useState","MapView","Marker","PROVIDER_GOOGLE","listCars","HomeMap","props","cars","setCars","getImage","type","require","height","width","latitudeDelta","longitudeDelta","latitude","longitude","map","car","resizeMode","transform","rotate","heading","id"],"sources":["/home/alexandre/Desktop/UberClone/Clone-App-Uber-/src/components/HomeMap/HomeMap.jsx"],"sourcesContent":["import { graphqlOperation } from \"aws-amplify\";\nimport React, { useEffect, useState } from \"react\";\nimport { Image } from \"react-native\";\n\nimport MapView, { Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\n\n// Nao sera maisn usado, pois sera importado das queries onde foi feita adicao dos carros\n// import cars from \"../../assets/data/cars\";\nimport { listCars } from \"../../graphql/queries\";\n\nconst HomeMap = (props) => {\n  //TODO revisar Usar carros adicionados na query graphql\n  const [cars, setCars] = useState([]);\n\n  // useEffect(() => {\n  //   const fetchCars = async () => {\n  //     try {\n  //       const response = await API.graphql(graphqlOperation(listCars));\n  //       console.log(response);\n  //     } catch (e) {\n  //       console.error(e);\n  //     }\n  //   };\n  //   fetchCars();\n  // }, []);\n\n  const getImage = (type) => {\n    // type nao sera mais objeto, somente uma string\n    if (type === \"UberX\") {\n      return require(\"../../assets/images/top-UberX.png\");\n    }\n    if (type === \"Comfort\") {\n      return require(\"../../assets/images/top-Comfort.png\");\n    }\n    return require(\"../../assets/images/top-UberXL.png\");\n  };\n  return (\n    <MapView\n      style={{ height: \"100%\", width: \"100%\" }}\n      provider={PROVIDER_GOOGLE}\n      //TODO mostra a localizacao atual. Precisa revisar pois nao esta funcionando\n      showsUserLocation={true}\n      // userInterfaceStyle=\"dark\"\n      showsMyLocationButton={true}\n      // showsCompass={true}\n      initialRegion={{\n        latitudeDelta: 0.0222,\n        longitudeDelta: 0.0121,\n        latitude: 28.450627,\n        longitude: -16.263045,\n      }}\n    >\n      {cars.map((car) => (\n        <Marker\n          key={car.id}\n          coordinate={{ latitude: car.latitude, longitude: car.longitude }}\n        >\n          <Image\n            style={{\n              width: 60,\n              height: 60,\n              resizeMode: \"contain\",\n\n              transform: [\n                {\n                  rotate: `${car.heading}deg`,\n                },\n              ],\n            }}\n            source={getImage(car.type)}\n          />\n        </Marker>\n      ))}\n    </MapView>\n  );\n};\n\nexport default HomeMap;\n"],"mappings":";AAAA,SAASA,gBAAT,QAAiC,aAAjC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,OAAOC,OAAP,IAAkBC,MAAlB,EAA0BC,eAA1B,QAAiD,mBAAjD;AAIA,SAASC,QAAT;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;EAEzB,gBAAwBN,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOO,IAAP;EAAA,IAAaC,OAAb;;EAcA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;IAEzB,IAAIA,IAAI,KAAK,OAAb,EAAsB;MACpB,OAAOC,OAAO,qCAAd;IACD;;IACD,IAAID,IAAI,KAAK,SAAb,EAAwB;MACtB,OAAOC,OAAO,uCAAd;IACD;;IACD,OAAOA,OAAO,sCAAd;EACD,CATD;;EAUA,OACE,KAAC,OAAD;IACE,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAV;MAAkBC,KAAK,EAAE;IAAzB,CADT;IAEE,QAAQ,EAAEV,eAFZ;IAIE,iBAAiB,EAAE,IAJrB;IAME,qBAAqB,EAAE,IANzB;IAQE,aAAa,EAAE;MACbW,aAAa,EAAE,MADF;MAEbC,cAAc,EAAE,MAFH;MAGbC,QAAQ,EAAE,SAHG;MAIbC,SAAS,EAAE,CAAC;IAJC,CARjB;IAAA,UAeGV,IAAI,CAACW,GAAL,CAAS,UAACC,GAAD;MAAA,OACR,KAAC,MAAD;QAEE,UAAU,EAAE;UAAEH,QAAQ,EAAEG,GAAG,CAACH,QAAhB;UAA0BC,SAAS,EAAEE,GAAG,CAACF;QAAzC,CAFd;QAAA,UAIE,KAAC,KAAD;UACE,KAAK,EAAE;YACLJ,KAAK,EAAE,EADF;YAELD,MAAM,EAAE,EAFH;YAGLQ,UAAU,EAAE,SAHP;YAKLC,SAAS,EAAE,CACT;cACEC,MAAM,EAAKH,GAAG,CAACI,OAAT;YADR,CADS;UALN,CADT;UAYE,MAAM,EAAEd,QAAQ,CAACU,GAAG,CAACT,IAAL;QAZlB;MAJF,GACOS,GAAG,CAACK,EADX,CADQ;IAAA,CAAT;EAfH,EADF;AAuCD,CAjED;;AAmEA,eAAenB,OAAf"},"metadata":{},"sourceType":"module"}