{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { DrawerContentScrollView, DrawerItemList } from \"@react-navigation/drawer\";\nimport React from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomDrawer = function CustomDrawer(props) {\n  return _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: [_jsxs(View, {\n      style: {\n        backgroundColor: \"#212121\",\n        padding: 15\n      },\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(View, {\n          style: {\n            backgroundColor: \"#cacaca\",\n            width: 50,\n            height: 50,\n            borderRadius: 25,\n            marginRight: 15\n          }\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            style: {\n              color: \"white\",\n              fontSize: 24\n            },\n            children: \"Ale Desenvolvedor\"\n          }), _jsx(Text, {\n            style: {\n              color: \"lightgrey\"\n            },\n            children: \"5.00 *\"\n          })]\n        })]\n      }), _jsx(View, {\n        style: {\n          borderBottomWidth: 1,\n          borderBottomColor: \"#989898\",\n          borderTopWidth: 1,\n          borderTopColor: \"#989898\",\n          paddingVertical: 5,\n          marginVertical: 10\n        },\n        children: _jsx(Pressable, {\n          onPress: function onPress() {\n            console.warn(\"Messages\");\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"#dddddd\",\n              paddingVertical: 5\n            },\n            children: \"Messages\"\n          })\n        })\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          console.warn(\"Do more with your account\");\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"#dddddd\",\n            paddingVertical: 5\n          },\n          children: \"Do more with your account\"\n        })\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          console.warn(\"Make money driving\");\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"white\",\n            paddingVertical: 5\n          },\n          children: \"Make money driving\"\n        })\n      })]\n    }), _jsx(DrawerItemList, _objectSpread({}, props))]\n  }));\n};\n\nexport default CustomDrawer;","map":{"version":3,"names":["DrawerContentScrollView","DrawerItemList","React","CustomDrawer","props","backgroundColor","padding","flexDirection","alignItems","width","height","borderRadius","marginRight","color","fontSize","borderBottomWidth","borderBottomColor","borderTopWidth","borderTopColor","paddingVertical","marginVertical","console","warn"],"sources":["/home/alexandre/Desktop/UberClone/Clone-App-Uber-/src/navigation/CustomDrawer.jsx"],"sourcesContent":["import {\n  DrawerContentScrollView,\n  DrawerItemList,\n} from \"@react-navigation/drawer\";\nimport React from \"react\";\nimport { Pressable, Text, View } from \"react-native\";\n\n// Feito para customizar o drawer\nconst CustomDrawer = (props) => {\n  return (\n    // essa props serve pra estilizar, mas na Root\n    <DrawerContentScrollView {...props}>\n      <View style={{ backgroundColor: \"#212121\", padding: 15 }}>\n        {/* Imagem e nome do usuario */}\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          {/* Imagem */}\n          <View\n            style={{\n              backgroundColor: \"#cacaca\",\n              width: 50,\n              height: 50,\n              borderRadius: 25,\n              marginRight:15\n            }}\n          />\n          {/* Nome */}\n          <View>\n            <Text style={{ color: \"white\", fontSize: 24 }}>\n              Ale Desenvolvedor\n            </Text>\n            <Text style={{ color: \"lightgrey\" }}>5.00 *</Text>\n          </View>\n        </View>\n\n        {/* Linhas que separam textos acima e abaixo */}\n        <View\n          style={{\n            borderBottomWidth: 1,\n            borderBottomColor: \"#989898\",\n            borderTopWidth: 1,\n            borderTopColor: \"#989898\",\n            paddingVertical: 5,\n            marginVertical: 10,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              console.warn(\"Messages\");\n            }}\n          >\n            <Text style={{ color: \"#dddddd\", paddingVertical: 5 }}>\n              Messages\n            </Text>\n          </Pressable>\n        </View>\n\n        {/* Mensagem dentro do background preto */}\n        <Pressable\n          onPress={() => {\n            console.warn(\"Do more with your account\");\n          }}\n        >\n          <Text style={{ color: \"#dddddd\", paddingVertical: 5 }}>\n            Do more with your account\n          </Text>\n        </Pressable>\n\n        {/* Mensagem dentro do background preto */}\n        <Pressable\n          onPress={() => {\n            console.warn(\"Make money driving\");\n          }}\n        >\n          <Text style={{ color: \"white\", paddingVertical: 5 }}>\n            Make money driving\n          </Text>\n        </Pressable>\n      </View>\n      <DrawerItemList {...props} />\n    </DrawerContentScrollView>\n  );\n};\n\nexport default CustomDrawer;\n"],"mappings":";;;;;;AAAA,SACEA,uBADF,EAEEC,cAFF,QAGO,0BAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;EAC9B,OAEE,MAAC,uBAAD,kCAA6BA,KAA7B;IAAA,WACE,MAAC,IAAD;MAAM,KAAK,EAAE;QAAEC,eAAe,EAAE,SAAnB;QAA8BC,OAAO,EAAE;MAAvC,CAAb;MAAA,WAEE,MAAC,IAAD;QAAM,KAAK,EAAE;UAAEC,aAAa,EAAE,KAAjB;UAAwBC,UAAU,EAAE;QAApC,CAAb;QAAA,WAEE,KAAC,IAAD;UACE,KAAK,EAAE;YACLH,eAAe,EAAE,SADZ;YAELI,KAAK,EAAE,EAFF;YAGLC,MAAM,EAAE,EAHH;YAILC,YAAY,EAAE,EAJT;YAKLC,WAAW,EAAC;UALP;QADT,EAFF,EAYE,MAAC,IAAD;UAAA,WACE,KAAC,IAAD;YAAM,KAAK,EAAE;cAAEC,KAAK,EAAE,OAAT;cAAkBC,QAAQ,EAAE;YAA5B,CAAb;YAAA;UAAA,EADF,EAIE,KAAC,IAAD;YAAM,KAAK,EAAE;cAAED,KAAK,EAAE;YAAT,CAAb;YAAA;UAAA,EAJF;QAAA,EAZF;MAAA,EAFF,EAuBE,KAAC,IAAD;QACE,KAAK,EAAE;UACLE,iBAAiB,EAAE,CADd;UAELC,iBAAiB,EAAE,SAFd;UAGLC,cAAc,EAAE,CAHX;UAILC,cAAc,EAAE,SAJX;UAKLC,eAAe,EAAE,CALZ;UAMLC,cAAc,EAAE;QANX,CADT;QAAA,UAUE,KAAC,SAAD;UACE,OAAO,EAAE,mBAAM;YACbC,OAAO,CAACC,IAAR,CAAa,UAAb;UACD,CAHH;UAAA,UAKE,KAAC,IAAD;YAAM,KAAK,EAAE;cAAET,KAAK,EAAE,SAAT;cAAoBM,eAAe,EAAE;YAArC,CAAb;YAAA;UAAA;QALF;MAVF,EAvBF,EA6CE,KAAC,SAAD;QACE,OAAO,EAAE,mBAAM;UACbE,OAAO,CAACC,IAAR,CAAa,2BAAb;QACD,CAHH;QAAA,UAKE,KAAC,IAAD;UAAM,KAAK,EAAE;YAAET,KAAK,EAAE,SAAT;YAAoBM,eAAe,EAAE;UAArC,CAAb;UAAA;QAAA;MALF,EA7CF,EAwDE,KAAC,SAAD;QACE,OAAO,EAAE,mBAAM;UACbE,OAAO,CAACC,IAAR,CAAa,oBAAb;QACD,CAHH;QAAA,UAKE,KAAC,IAAD;UAAM,KAAK,EAAE;YAAET,KAAK,EAAE,OAAT;YAAkBM,eAAe,EAAE;UAAnC,CAAb;UAAA;QAAA;MALF,EAxDF;IAAA,EADF,EAmEE,KAAC,cAAD,oBAAoBf,KAApB,EAnEF;EAAA,GAFF;AAwED,CAzED;;AA2EA,eAAeD,YAAf"},"metadata":{},"sourceType":"module"}