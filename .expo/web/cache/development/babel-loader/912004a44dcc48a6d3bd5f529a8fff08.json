{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport styles from \"./styles\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nimport PlaceRow from \"./PlaceRow\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nnavigator.geolocation = require(\"react-native-geolocation-service\");\nvar homePlace = {\n  description: \"Home\",\n  geometry: {\n    location: {\n      lat: 48.8152937,\n      lng: 2.4597668\n    }\n  }\n};\nvar workPlace = {\n  description: \"Work\",\n  geometry: {\n    location: {\n      lat: 48.8496818,\n      lng: 2.2940881\n    }\n  }\n};\n\nvar DestinationSearch = function DestinationSearch(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      originPlace = _useState2[0],\n      setOriginPlace = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      destinationPlace = _useState4[0],\n      setDestinationPlace = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    console.log(\"useEffect foi chamado\");\n\n    if (originPlace && destinationPlace) {\n      navigation.navigate(\"SearchResults\", {\n        originPlace: originPlace,\n        destinationPlace: destinationPlace\n      });\n      console.log(\"Redirecionando para pagina SearchResults\");\n    }\n  }, [originPlace, destinationPlace]);\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(GooglePlacesAutocomplete, {\n        placeholder: \"From\",\n        onPress: function onPress(data) {\n          var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          setOriginPlace({\n            data: data,\n            details: details\n          });\n          console.log(data, details);\n        },\n        enablePoweredByContainer: false,\n        suppressDefaultStyles: true,\n        styles: {\n          textInput: styles.textInput,\n          container: styles.autocompleteContainer,\n          listView: styles.listView,\n          separator: styles.separator\n        },\n        fetchDetails: true,\n        getDefaultValue: function getDefaultValue() {\n          return \"\";\n        },\n        query: {\n          key: \"AIzaSyDkdJwf-9NfdeC-HIzHvayZOVOryju03S4\",\n          language: \"en\"\n        },\n        renderRow: function renderRow(data) {\n          return _jsx(PlaceRow, {\n            data: data\n          });\n        },\n        renderDescription: function renderDescription(data) {\n          return data.description || data.vicinity;\n        },\n        predefinedPlaces: [homePlace, workPlace]\n      }), _jsx(GooglePlacesAutocomplete, {\n        placeholder: \"Where to?\",\n        onPress: function onPress(data) {\n          var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          setDestinationPlace({\n            data: data,\n            details: details\n          });\n          console.log(data, details);\n        },\n        enablePoweredByContainer: false,\n        suppressDefaultStyles: true,\n        styles: {\n          textInput: styles.textInput,\n          container: _objectSpread(_objectSpread({}, styles.autocompleteContainer), {}, {\n            top: 85\n          }),\n          separator: styles.separator\n        },\n        fetchDetails: true,\n        query: {\n          key: \"AIzaSyDkdJwf-9NfdeC-HIzHvayZOVOryju03S4\",\n          language: \"en\"\n        },\n        renderRow: function renderRow(data) {\n          return _jsx(PlaceRow, {\n            data: data\n          });\n        }\n      }), _jsx(View, {\n        style: styles.circle\n      }), _jsx(View, {\n        style: styles.line\n      }), _jsx(View, {\n        style: styles.square\n      })]\n    })\n  });\n};\n\nexport default DestinationSearch;","map":{"version":3,"names":["React","useEffect","useState","styles","GooglePlacesAutocomplete","PlaceRow","useNavigation","navigator","geolocation","require","homePlace","description","geometry","location","lat","lng","workPlace","DestinationSearch","props","originPlace","setOriginPlace","destinationPlace","setDestinationPlace","navigation","console","log","navigate","container","data","details","textInput","autocompleteContainer","listView","separator","key","language","vicinity","top","circle","line","square"],"sources":["/home/alexandre/Desktop/UberClone/Clone-App-Uber-/src/screens/DestinationSearch/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, SafeAreaView } from \"react-native\";\n\nimport styles from \"./styles\";\n\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nimport PlaceRow from \"./PlaceRow\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nnavigator.geolocation = require(\"react-native-geolocation-service\");\n\nconst homePlace = {\n  description: \"Home\",\n  geometry: { location: { lat: 48.8152937, lng: 2.4597668 } },\n};\nconst workPlace = {\n  description: \"Work\",\n  geometry: { location: { lat: 48.8496818, lng: 2.2940881 } },\n};\n\nconst DestinationSearch = (props) => {\n  const [originPlace, setOriginPlace] = useState(null);\n  const [destinationPlace, setDestinationPlace] = useState(null);\n\n  const navigation = useNavigation();\n\n  // Checando se ambos estao funcionam depois de renderizar a tela\n  useEffect(() => {\n    console.log(\"useEffect foi chamado\");\n    if (originPlace && destinationPlace) {\n      // enviar segundo parametro (ira receber os dados na outra pagina SearchResults)\n      navigation.navigate(\"SearchResults\", {\n        originPlace,\n        destinationPlace,\n      });\n      console.log(\"Redirecionando para pagina SearchResults\");\n    }\n  }, [originPlace, destinationPlace]);\n\n  return (\n    <SafeAreaView>\n      <View style={styles.container}>\n        {/* Uso da API Google Places AutoComplete */}\n        <GooglePlacesAutocomplete\n          placeholder=\"From\"\n          onPress={(data, details = null) => {\n            // 'details' is provided when fetchDetails = true\n            setOriginPlace({ data, details });\n            console.log(data, details);\n          }}\n          // remove PoweredByGoogle da tela\n          enablePoweredByContainer={false}\n          // colocado para ignorar default styles\n          suppressDefaultStyles\n          //TODO mostra a localizacao atual. Precisa revisar pois nao esta funcionando\n          // currentLocation={true}\n          // currentLocationLabel=\"Current location\"\n          styles={{\n            textInput: styles.textInput,\n            container: styles.autocompleteContainer,\n            listView: styles.listView,\n            separator: styles.separator,\n          }}\n          fetchDetails\n          getDefaultValue={() => \"\"}\n          query={{\n            // TODO apagar key quando enviar github 04\n            key: \"AIzaSyDkdJwf-9NfdeC-HIzHvayZOVOryju03S4\",\n            language: \"en\",\n          }}\n          // renderizado na lista de busca\n          renderRow={(data) => <PlaceRow data={data} />}\n          renderDescription={(data) => data.description || data.vicinity}\n          predefinedPlaces={[homePlace, workPlace]}\n        />\n\n        {/* Uso da API Google Places AutoComplete */}\n        <GooglePlacesAutocomplete\n          placeholder=\"Where to?\"\n          onPress={(data, details = null) => {\n            // 'details' is provided when fetchDetails = true\n            setDestinationPlace({ data, details });\n            console.log(data, details);\n          }}\n          enablePoweredByContainer={false}\n          suppressDefaultStyles\n          styles={{\n            textInput: styles.textInput,\n            // precisa sobresescrever o valor de top para 85, criando um objeto de(autocompleteContainer) e desestruturando todo o estilo aplicado no container\n            container: { ...styles.autocompleteContainer, top: 85 },\n            separator: styles.separator,\n          }}\n          fetchDetails\n          query={{\n            // TODO apagar key quando enviar github 05\n            key: \"AIzaSyDkdJwf-9NfdeC-HIzHvayZOVOryju03S4\",\n            language: \"en\",\n          }}\n          renderRow={(data) => <PlaceRow data={data} />}\n        />\n        {/* detalhes ao lado de 'From' e 'where to' (quadrado e circulo e uma linha vertical entre) */}\n        <View style={styles.circle} />\n        <View style={styles.line} />\n        <View style={styles.square} />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default DestinationSearch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}